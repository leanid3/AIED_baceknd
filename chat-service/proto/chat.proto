syntax = "proto3";

package chat;

option go_package = "./gen;gen";

import "google/api/annotations.proto";

// Сервис для управления чатом и диалогами
service ChatService {
  // Создать новый диалог
  rpc CreateDialog(CreateDialogRequest) returns (CreateDialogResponse) {
    option (google.api.http) = {
      post: "/v1/dialogs"
      body: "*"
    };
  }

  // Отправить сообщение в диалог
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {
    option (google.api.http) = {
      post: "/v1/dialogs/{dialog_id}/messages"
      body: "*"
    };
  }

  // Получить историю диалога
  rpc GetDialogHistory(GetDialogHistoryRequest) returns (GetDialogHistoryResponse) {
    option (google.api.http) = {
      get: "/v1/dialogs/{dialog_id}/messages"
    };
  }

  // Получить список диалогов пользователя
  rpc ListDialogs(ListDialogsRequest) returns (ListDialogsResponse) {
    option (google.api.http) = {
      get: "/v1/dialogs"
    };
  }

  // Удалить диалог
  rpc DeleteDialog(DeleteDialogRequest) returns (DeleteDialogResponse) {
    option (google.api.http) = {
      delete: "/v1/dialogs/{dialog_id}"
    };
  }

  // Обновить статус сообщения (для уведомлений о завершении задач)
  rpc UpdateMessageStatus(UpdateMessageStatusRequest) returns (UpdateMessageStatusResponse) {
    option (google.api.http) = {
      put: "/v1/dialogs/{dialog_id}/messages/{message_id}/status"
      body: "*"
    };
  }

  // Получить статус обработки сообщения
  rpc GetMessageStatus(GetMessageStatusRequest) returns (GetMessageStatusResponse) {
    option (google.api.http) = {
      get: "/v1/dialogs/{dialog_id}/messages/{message_id}/status"
    };
  }
}

// ========= ЗАПРОСЫ =========

message CreateDialogRequest {
  string user_id = 1;
  string title = 2; // опционально
  string initial_message = 3; // опционально
}

message SendMessageRequest {
  string dialog_id = 1;
  string user_id = 2;
  string content = 3;
  string message_type = 4; // "user", "system", "assistant"
  repeated string file_ids = 5; // прикрепленные файлы
  map<string, string> metadata = 6; // дополнительная информация
}

message GetDialogHistoryRequest {
  string dialog_id = 1;
  string user_id = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message ListDialogsRequest {
  string user_id = 1;
  int32 page = 2;
  int32 page_size = 3;
}

message DeleteDialogRequest {
  string dialog_id = 1;
  string user_id = 2;
}

message UpdateMessageStatusRequest {
  string dialog_id = 1;
  string message_id = 2;
  string user_id = 3;
  string status = 4; // "processing", "completed", "failed"
  string result = 5; // результат обработки
  string error_message = 6;
}

message GetMessageStatusRequest {
  string dialog_id = 1;
  string message_id = 2;
  string user_id = 3;
}

// ========= ОТВЕТЫ =========

message CreateDialogResponse {
  string dialog_id = 1;
  string status = 2; // "created", "failed"
  string message = 3;
  string created_at = 4;
}

message SendMessageResponse {
  string message_id = 1;
  string status = 2; // "sent", "processing", "failed"
  string message = 3;
  string created_at = 4;
  bool requires_processing = 5; // требует ли обработки (анализ файла, генерация ETL)
}

message GetDialogHistoryResponse {
  string dialog_id = 1;
  repeated Message messages = 2;
  int32 total_count = 3;
  int32 page = 4;
  int32 page_size = 5;
}

message ListDialogsResponse {
  repeated DialogInfo dialogs = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message DeleteDialogResponse {
  string dialog_id = 1;
  string status = 2; // "deleted", "not_found", "failed"
  string message = 3;
}

message UpdateMessageStatusResponse {
  string message_id = 1;
  string status = 2; // "updated", "not_found", "failed"
  string message = 3;
}

message GetMessageStatusResponse {
  string message_id = 1;
  string status = 2; // "processing", "completed", "failed"
  string result = 3;
  string error_message = 4;
  string updated_at = 5;
}

// ========= МОДЕЛИ ДАННЫХ =========

message DialogInfo {
  string dialog_id = 1;
  string title = 2;
  string user_id = 3;
  string created_at = 4;
  string updated_at = 5;
  int32 message_count = 6;
  string last_message = 7;
}

message Message {
  string message_id = 1;
  string dialog_id = 2;
  string user_id = 3;
  string content = 4;
  string message_type = 5; // "user", "system", "assistant"
  string status = 6; // "sent", "processing", "completed", "failed"
  repeated string file_ids = 7;
  string result = 8; // результат обработки
  string error_message = 9;
  map<string, string> metadata = 10;
  string created_at = 11;
  string updated_at = 12;
}