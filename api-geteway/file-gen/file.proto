syntax = "proto3";

package file;

option go_package = "./proto;proto";

import "google/api/annotations.proto";

// Сервис для управления файлами
service FileService {
  // Загрузка файла (multipart/form-data)
  rpc UploadFile(UploadFileRequest) returns (UploadFileResponse) {
    option (google.api.http) = {
      post: "/v1/files/upload"
      body: "*"
    };
  }

  // Получить информацию о файле
  rpc GetFileInfo(GetFileInfoRequest) returns (GetFileInfoResponse) {
    option (google.api.http) = {
      get: "/v1/files/{file_id}"
    };
  }

  // Скачать файл
  rpc DownloadFile(DownloadFileRequest) returns (stream DownloadFileResponse) {
    option (google.api.http) = {
      get: "/v1/files/{file_id}/download"
    };
  }

  // Удалить файл
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse) {
    option (google.api.http) = {
      delete: "/v1/files/{file_id}"
    };
  }

  // Получить список файлов пользователя
  rpc ListFiles(ListFilesRequest) returns (ListFilesResponse) {
    option (google.api.http) = {
      get: "/v1/files"
    };
  }

  // Проверить статус загрузки файла
  rpc GetUploadStatus(GetUploadStatusRequest) returns (GetUploadStatusResponse) {
    option (google.api.http) = {
      get: "/v1/files/{file_id}/status"
    };
  }
}

// ========= ЗАПРОСЫ =========

message UploadFileRequest {
  string user_id = 1;
  string filename = 2;
  string content_type = 3;
  int64 file_size = 4;
  // Файл передается через multipart/form-data
}

message GetFileInfoRequest {
  string file_id = 1;
  string user_id = 2;
}

message DownloadFileRequest {
  string file_id = 1;
  string user_id = 2;
}

message DeleteFileRequest {
  string file_id = 1;
  string user_id = 2;
}

message ListFilesRequest {
  string user_id = 1;
  int32 page = 2;
  int32 page_size = 3;
  string status = 4; // "uploaded", "processing", "failed"
}

message GetUploadStatusRequest {
  string file_id = 1;
  string user_id = 2;
}

// ========= ОТВЕТЫ =========

message UploadFileResponse {
  string file_id = 1;
  string status = 2; // "uploaded", "processing", "failed"
  string message = 3;
  string storage_path = 4;
  int64 file_size = 5;
  string created_at = 6;
}

message GetFileInfoResponse {
  string file_id = 1;
  string filename = 2;
  string content_type = 3;
  int64 file_size = 4;
  string status = 5;
  string storage_path = 6;
  string created_at = 7;
  string updated_at = 8;
  map<string, string> metadata = 9;
}

message DownloadFileResponse {
  bytes chunk = 1;
  int64 total_size = 2;
  int64 current_offset = 3;
}

message DeleteFileResponse {
  string file_id = 1;
  string status = 2; // "deleted", "not_found", "failed"
  string message = 3;
}

message ListFilesResponse {
  repeated FileInfo files = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message GetUploadStatusResponse {
  string file_id = 1;
  string status = 2; // "uploading", "uploaded", "processing", "failed"
  int32 progress_percent = 3;
  string message = 4;
}

message FileInfo {
  string file_id = 1;
  string filename = 2;
  string content_type = 3;
  int64 file_size = 4;
  string status = 5;
  string created_at = 6;
  string updated_at = 7;
}