// proto/profiler.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: profiler.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProfileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Source:
	//
	//	*ProfileRequest_File
	//	*ProfileRequest_Db
	//	*ProfileRequest_Stream
	Source         isProfileRequest_Source `protobuf_oneof:"source"`
	CredentialsRef string                  `protobuf:"bytes,4,opt,name=credentials_ref,json=credentialsRef,proto3" json:"credentials_ref,omitempty"` // для безопасной передачи секретов
	SampleSize     int32                   `protobuf:"varint,5,opt,name=sample_size,json=sampleSize,proto3" json:"sample_size,omitempty"`            // сколько строк прочитать (default: 100)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProfileRequest) Reset() {
	*x = ProfileRequest{}
	mi := &file_profiler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileRequest) ProtoMessage() {}

func (x *ProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileRequest.ProtoReflect.Descriptor instead.
func (*ProfileRequest) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{0}
}

func (x *ProfileRequest) GetSource() isProfileRequest_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ProfileRequest) GetFile() *FileSource {
	if x != nil {
		if x, ok := x.Source.(*ProfileRequest_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *ProfileRequest) GetDb() *DatabaseSource {
	if x != nil {
		if x, ok := x.Source.(*ProfileRequest_Db); ok {
			return x.Db
		}
	}
	return nil
}

func (x *ProfileRequest) GetStream() *StreamSource {
	if x != nil {
		if x, ok := x.Source.(*ProfileRequest_Stream); ok {
			return x.Stream
		}
	}
	return nil
}

func (x *ProfileRequest) GetCredentialsRef() string {
	if x != nil {
		return x.CredentialsRef
	}
	return ""
}

func (x *ProfileRequest) GetSampleSize() int32 {
	if x != nil {
		return x.SampleSize
	}
	return 0
}

type isProfileRequest_Source interface {
	isProfileRequest_Source()
}

type ProfileRequest_File struct {
	File *FileSource `protobuf:"bytes,1,opt,name=file,proto3,oneof"`
}

type ProfileRequest_Db struct {
	Db *DatabaseSource `protobuf:"bytes,2,opt,name=db,proto3,oneof"`
}

type ProfileRequest_Stream struct {
	Stream *StreamSource `protobuf:"bytes,3,opt,name=stream,proto3,oneof"`
}

func (*ProfileRequest_File) isProfileRequest_Source() {}

func (*ProfileRequest_Db) isProfileRequest_Source() {}

func (*ProfileRequest_Stream) isProfileRequest_Source() {}

type FileSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Format        string                 `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"` // "csv", "json", "xml"
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`       // HTTP(S) URL или внутренний ID (например, "upload://abc123")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileSource) Reset() {
	*x = FileSource{}
	mi := &file_profiler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSource) ProtoMessage() {}

func (x *FileSource) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSource.ProtoReflect.Descriptor instead.
func (*FileSource) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{1}
}

func (x *FileSource) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *FileSource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type DatabaseSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // "postgres", "clickhouse"
	Host          string                 `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Database      string                 `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
	Table         string                 `protobuf:"bytes,5,opt,name=table,proto3" json:"table,omitempty"`
	Username      string                 `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"` // пароль передаётся через credentials_ref
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseSource) Reset() {
	*x = DatabaseSource{}
	mi := &file_profiler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseSource) ProtoMessage() {}

func (x *DatabaseSource) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseSource.ProtoReflect.Descriptor instead.
func (*DatabaseSource) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{2}
}

func (x *DatabaseSource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DatabaseSource) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DatabaseSource) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DatabaseSource) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DatabaseSource) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *DatabaseSource) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type StreamSource struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Type             string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // "kafka"
	Topic            string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	BootstrapServers string                 `protobuf:"bytes,3,opt,name=bootstrap_servers,json=bootstrapServers,proto3" json:"bootstrap_servers,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StreamSource) Reset() {
	*x = StreamSource{}
	mi := &file_profiler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSource) ProtoMessage() {}

func (x *StreamSource) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSource.ProtoReflect.Descriptor instead.
func (*StreamSource) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{3}
}

func (x *StreamSource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StreamSource) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *StreamSource) GetBootstrapServers() string {
	if x != nil {
		return x.BootstrapServers
	}
	return ""
}

type ProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []*Field               `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	SampledRows   int32                  `protobuf:"varint,2,opt,name=sampled_rows,json=sampledRows,proto3" json:"sampled_rows,omitempty"`
	DataCategory  string                 `protobuf:"bytes,3,opt,name=data_category,json=dataCategory,proto3" json:"data_category,omitempty"` // "timeseries", "transactional", "log", "unknown"
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`                                   // если что-то пошло не так
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProfileResponse) Reset() {
	*x = ProfileResponse{}
	mi := &file_profiler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileResponse) ProtoMessage() {}

func (x *ProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileResponse.ProtoReflect.Descriptor instead.
func (*ProfileResponse) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{4}
}

func (x *ProfileResponse) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ProfileResponse) GetSampledRows() int32 {
	if x != nil {
		return x.SampledRows
	}
	return 0
}

func (x *ProfileResponse) GetDataCategory() string {
	if x != nil {
		return x.DataCategory
	}
	return ""
}

func (x *ProfileResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Field struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Name         string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InferredType string                 `protobuf:"bytes,2,opt,name=inferred_type,json=inferredType,proto3" json:"inferred_type,omitempty"` // "string", "int", "float", "datetime", "bool", "json"
	IsNullable   bool                   `protobuf:"varint,3,opt,name=is_nullable,json=isNullable,proto3" json:"is_nullable,omitempty"`
	NullCount    int32                  `protobuf:"varint,4,opt,name=null_count,json=nullCount,proto3" json:"null_count,omitempty"`
	// Опционально: статистика
	MinValue      float64 `protobuf:"fixed64,5,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue      float64 `protobuf:"fixed64,6,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	SampleValue   string  `protobuf:"bytes,7,opt,name=sample_value,json=sampleValue,proto3" json:"sample_value,omitempty"` // пример значения
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Field) Reset() {
	*x = Field{}
	mi := &file_profiler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{5}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetInferredType() string {
	if x != nil {
		return x.InferredType
	}
	return ""
}

func (x *Field) GetIsNullable() bool {
	if x != nil {
		return x.IsNullable
	}
	return false
}

func (x *Field) GetNullCount() int32 {
	if x != nil {
		return x.NullCount
	}
	return 0
}

func (x *Field) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *Field) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *Field) GetSampleValue() string {
	if x != nil {
		return x.SampleValue
	}
	return ""
}

type UploadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	FileData      []byte                 `protobuf:"bytes,3,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_profiler_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{6}
}

func (x *UploadFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadFileRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *UploadFileRequest) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

func (x *UploadFileRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UploadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // "uploaded", "failed"
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_profiler_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{7}
}

func (x *UploadFileResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UploadFileResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UploadFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ProcessFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessFileRequest) Reset() {
	*x = ProcessFileRequest{}
	mi := &file_profiler_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessFileRequest) ProtoMessage() {}

func (x *ProcessFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessFileRequest.ProtoReflect.Descriptor instead.
func (*ProcessFileRequest) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessFileRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type ProcessFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "processed", "failed"
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DataProfile   *UnifiedDataProfile    `protobuf:"bytes,3,opt,name=data_profile,json=dataProfile,proto3" json:"data_profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessFileResponse) Reset() {
	*x = ProcessFileResponse{}
	mi := &file_profiler_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessFileResponse) ProtoMessage() {}

func (x *ProcessFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessFileResponse.ProtoReflect.Descriptor instead.
func (*ProcessFileResponse) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{9}
}

func (x *ProcessFileResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessFileResponse) GetDataProfile() *UnifiedDataProfile {
	if x != nil {
		return x.DataProfile
	}
	return nil
}

// Единый формат данных для передачи в LLM
type UnifiedDataProfile struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DataType         string                 `protobuf:"bytes,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"` // "timeseries", "transactional", "log", "unknown"
	TotalRows        int32                  `protobuf:"varint,2,opt,name=total_rows,json=totalRows,proto3" json:"total_rows,omitempty"`
	SampledRows      int32                  `protobuf:"varint,3,opt,name=sampled_rows,json=sampledRows,proto3" json:"sampled_rows,omitempty"`
	Fields           []*UnifiedField        `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	SampleData       string                 `protobuf:"bytes,5,opt,name=sample_data,json=sampleData,proto3" json:"sample_data,omitempty"`                     // JSON с примерами данных
	DataQualityScore string                 `protobuf:"bytes,6,opt,name=data_quality_score,json=dataQualityScore,proto3" json:"data_quality_score,omitempty"` // оценка качества данных
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UnifiedDataProfile) Reset() {
	*x = UnifiedDataProfile{}
	mi := &file_profiler_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnifiedDataProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnifiedDataProfile) ProtoMessage() {}

func (x *UnifiedDataProfile) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnifiedDataProfile.ProtoReflect.Descriptor instead.
func (*UnifiedDataProfile) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{10}
}

func (x *UnifiedDataProfile) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *UnifiedDataProfile) GetTotalRows() int32 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *UnifiedDataProfile) GetSampledRows() int32 {
	if x != nil {
		return x.SampledRows
	}
	return 0
}

func (x *UnifiedDataProfile) GetFields() []*UnifiedField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UnifiedDataProfile) GetSampleData() string {
	if x != nil {
		return x.SampleData
	}
	return ""
}

func (x *UnifiedDataProfile) GetDataQualityScore() string {
	if x != nil {
		return x.DataQualityScore
	}
	return ""
}

type UnifiedField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // "string", "int", "float", "datetime", "bool", "json"
	Nullable      bool                   `protobuf:"varint,3,opt,name=nullable,proto3" json:"nullable,omitempty"`
	NullCount     int32                  `protobuf:"varint,4,opt,name=null_count,json=nullCount,proto3" json:"null_count,omitempty"`
	SampleValue   string                 `protobuf:"bytes,5,opt,name=sample_value,json=sampleValue,proto3" json:"sample_value,omitempty"`
	MinValue      float64                `protobuf:"fixed64,6,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue      float64                `protobuf:"fixed64,7,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	Description   string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"` // описание поля от LLM
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnifiedField) Reset() {
	*x = UnifiedField{}
	mi := &file_profiler_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnifiedField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnifiedField) ProtoMessage() {}

func (x *UnifiedField) ProtoReflect() protoreflect.Message {
	mi := &file_profiler_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnifiedField.ProtoReflect.Descriptor instead.
func (*UnifiedField) Descriptor() ([]byte, []int) {
	return file_profiler_proto_rawDescGZIP(), []int{11}
}

func (x *UnifiedField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnifiedField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UnifiedField) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *UnifiedField) GetNullCount() int32 {
	if x != nil {
		return x.NullCount
	}
	return 0
}

func (x *UnifiedField) GetSampleValue() string {
	if x != nil {
		return x.SampleValue
	}
	return ""
}

func (x *UnifiedField) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *UnifiedField) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *UnifiedField) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_profiler_proto protoreflect.FileDescriptor

const file_profiler_proto_rawDesc = "" +
	"\n" +
	"\x0eprofiler.proto\x12\bprofiler\"\xee\x01\n" +
	"\x0eProfileRequest\x12*\n" +
	"\x04file\x18\x01 \x01(\v2\x14.profiler.FileSourceH\x00R\x04file\x12*\n" +
	"\x02db\x18\x02 \x01(\v2\x18.profiler.DatabaseSourceH\x00R\x02db\x120\n" +
	"\x06stream\x18\x03 \x01(\v2\x16.profiler.StreamSourceH\x00R\x06stream\x12'\n" +
	"\x0fcredentials_ref\x18\x04 \x01(\tR\x0ecredentialsRef\x12\x1f\n" +
	"\vsample_size\x18\x05 \x01(\x05R\n" +
	"sampleSizeB\b\n" +
	"\x06source\"6\n" +
	"\n" +
	"FileSource\x12\x16\n" +
	"\x06format\x18\x01 \x01(\tR\x06format\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"\x9a\x01\n" +
	"\x0eDatabaseSource\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04host\x18\x02 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x12\x1a\n" +
	"\bdatabase\x18\x04 \x01(\tR\bdatabase\x12\x14\n" +
	"\x05table\x18\x05 \x01(\tR\x05table\x12\x1a\n" +
	"\busername\x18\x06 \x01(\tR\busername\"e\n" +
	"\fStreamSource\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12+\n" +
	"\x11bootstrap_servers\x18\x03 \x01(\tR\x10bootstrapServers\"\x98\x01\n" +
	"\x0fProfileResponse\x12'\n" +
	"\x06fields\x18\x01 \x03(\v2\x0f.profiler.FieldR\x06fields\x12!\n" +
	"\fsampled_rows\x18\x02 \x01(\x05R\vsampledRows\x12#\n" +
	"\rdata_category\x18\x03 \x01(\tR\fdataCategory\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"\xdd\x01\n" +
	"\x05Field\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rinferred_type\x18\x02 \x01(\tR\finferredType\x12\x1f\n" +
	"\vis_nullable\x18\x03 \x01(\bR\n" +
	"isNullable\x12\x1d\n" +
	"\n" +
	"null_count\x18\x04 \x01(\x05R\tnullCount\x12\x1b\n" +
	"\tmin_value\x18\x05 \x01(\x01R\bminValue\x12\x1b\n" +
	"\tmax_value\x18\x06 \x01(\x01R\bmaxValue\x12!\n" +
	"\fsample_value\x18\a \x01(\tR\vsampleValue\"\x88\x01\n" +
	"\x11UploadFileRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1b\n" +
	"\tfile_data\x18\x03 \x01(\fR\bfileData\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\"_\n" +
	"\x12UploadFileResponse\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"-\n" +
	"\x12ProcessFileRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\"\x88\x01\n" +
	"\x13ProcessFileResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12?\n" +
	"\fdata_profile\x18\x03 \x01(\v2\x1c.profiler.UnifiedDataProfileR\vdataProfile\"\xf2\x01\n" +
	"\x12UnifiedDataProfile\x12\x1b\n" +
	"\tdata_type\x18\x01 \x01(\tR\bdataType\x12\x1d\n" +
	"\n" +
	"total_rows\x18\x02 \x01(\x05R\ttotalRows\x12!\n" +
	"\fsampled_rows\x18\x03 \x01(\x05R\vsampledRows\x12.\n" +
	"\x06fields\x18\x04 \x03(\v2\x16.profiler.UnifiedFieldR\x06fields\x12\x1f\n" +
	"\vsample_data\x18\x05 \x01(\tR\n" +
	"sampleData\x12,\n" +
	"\x12data_quality_score\x18\x06 \x01(\tR\x10dataQualityScore\"\xf0\x01\n" +
	"\fUnifiedField\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1a\n" +
	"\bnullable\x18\x03 \x01(\bR\bnullable\x12\x1d\n" +
	"\n" +
	"null_count\x18\x04 \x01(\x05R\tnullCount\x12!\n" +
	"\fsample_value\x18\x05 \x01(\tR\vsampleValue\x12\x1b\n" +
	"\tmin_value\x18\x06 \x01(\x01R\bminValue\x12\x1b\n" +
	"\tmax_value\x18\a \x01(\x01R\bmaxValue\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription2\xe3\x01\n" +
	"\fDataProfiler\x12>\n" +
	"\aProfile\x12\x18.profiler.ProfileRequest\x1a\x19.profiler.ProfileResponse\x12G\n" +
	"\n" +
	"UploadFile\x12\x1b.profiler.UploadFileRequest\x1a\x1c.profiler.UploadFileResponse\x12J\n" +
	"\vProcessFile\x12\x1c.profiler.ProcessFileRequest\x1a\x1d.profiler.ProcessFileResponseB\vZ\t./gen;genb\x06proto3"

var (
	file_profiler_proto_rawDescOnce sync.Once
	file_profiler_proto_rawDescData []byte
)

func file_profiler_proto_rawDescGZIP() []byte {
	file_profiler_proto_rawDescOnce.Do(func() {
		file_profiler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_profiler_proto_rawDesc), len(file_profiler_proto_rawDesc)))
	})
	return file_profiler_proto_rawDescData
}

var file_profiler_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_profiler_proto_goTypes = []any{
	(*ProfileRequest)(nil),      // 0: profiler.ProfileRequest
	(*FileSource)(nil),          // 1: profiler.FileSource
	(*DatabaseSource)(nil),      // 2: profiler.DatabaseSource
	(*StreamSource)(nil),        // 3: profiler.StreamSource
	(*ProfileResponse)(nil),     // 4: profiler.ProfileResponse
	(*Field)(nil),               // 5: profiler.Field
	(*UploadFileRequest)(nil),   // 6: profiler.UploadFileRequest
	(*UploadFileResponse)(nil),  // 7: profiler.UploadFileResponse
	(*ProcessFileRequest)(nil),  // 8: profiler.ProcessFileRequest
	(*ProcessFileResponse)(nil), // 9: profiler.ProcessFileResponse
	(*UnifiedDataProfile)(nil),  // 10: profiler.UnifiedDataProfile
	(*UnifiedField)(nil),        // 11: profiler.UnifiedField
}
var file_profiler_proto_depIdxs = []int32{
	1,  // 0: profiler.ProfileRequest.file:type_name -> profiler.FileSource
	2,  // 1: profiler.ProfileRequest.db:type_name -> profiler.DatabaseSource
	3,  // 2: profiler.ProfileRequest.stream:type_name -> profiler.StreamSource
	5,  // 3: profiler.ProfileResponse.fields:type_name -> profiler.Field
	10, // 4: profiler.ProcessFileResponse.data_profile:type_name -> profiler.UnifiedDataProfile
	11, // 5: profiler.UnifiedDataProfile.fields:type_name -> profiler.UnifiedField
	0,  // 6: profiler.DataProfiler.Profile:input_type -> profiler.ProfileRequest
	6,  // 7: profiler.DataProfiler.UploadFile:input_type -> profiler.UploadFileRequest
	8,  // 8: profiler.DataProfiler.ProcessFile:input_type -> profiler.ProcessFileRequest
	4,  // 9: profiler.DataProfiler.Profile:output_type -> profiler.ProfileResponse
	7,  // 10: profiler.DataProfiler.UploadFile:output_type -> profiler.UploadFileResponse
	9,  // 11: profiler.DataProfiler.ProcessFile:output_type -> profiler.ProcessFileResponse
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_profiler_proto_init() }
func file_profiler_proto_init() {
	if File_profiler_proto != nil {
		return
	}
	file_profiler_proto_msgTypes[0].OneofWrappers = []any{
		(*ProfileRequest_File)(nil),
		(*ProfileRequest_Db)(nil),
		(*ProfileRequest_Stream)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_profiler_proto_rawDesc), len(file_profiler_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_profiler_proto_goTypes,
		DependencyIndexes: file_profiler_proto_depIdxs,
		MessageInfos:      file_profiler_proto_msgTypes,
	}.Build()
	File_profiler_proto = out.File
	file_profiler_proto_goTypes = nil
	file_profiler_proto_depIdxs = nil
}
