#!/bin/bash

# –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ workflow

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
TEST_USER="test-user-$(date +%s)"
CSV_FILE="_data/csv/part-00000-37dced01-2ad2-48c8-a56d-54b4d8760599-c000.csv"

print_header() {
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë              –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–°–¢–û–ì–û WORKFLOW                  ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

print_success() {
    echo -e "${GREEN}‚úì${NC} $1"
}

print_error() {
    echo -e "${RED}‚úó${NC} $1"
}

print_info() {
    echo -e "${BLUE}‚Ñπ${NC} $1"
}

# –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
test_file_upload() {
    print_info "–¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ CSV —Ñ–∞–π–ª–∞..."
    
    if [ ! -f "$CSV_FILE" ]; then
        print_error "CSV —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $CSV_FILE"
        return 1
    fi
    
    response=$(curl -s -X POST http://localhost:50054/v1/files/upload/csv \
        -H "Content-Type: multipart/form-data" \
        -F "file=@$CSV_FILE" \
        -F "user_id=$TEST_USER")
    
    if echo "$response" | grep -q "file_id"; then
        FILE_ID=$(echo "$response" | grep -o '"file_id":"[^"]*"' | cut -d'"' -f4)
        print_success "CSV —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, ID: $FILE_ID"
        echo "–û—Ç–≤–µ—Ç: $response"
    else
        print_error "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSV —Ñ–∞–π–ª–∞: $response"
        return 1
    fi
}

# –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
test_create_dialog() {
    print_info "–¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞..."
    
    response=$(curl -s -X POST http://localhost:50055/v1/dialogs \
        -H "Content-Type: application/json" \
        -d "{
            \"user_id\": \"$TEST_USER\",
            \"title\": \"–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö\",
            \"initial_message\": \"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª\"
        }")
    
    if echo "$response" | grep -q "dialog_id"; then
        DIALOG_ID=$(echo "$response" | grep -o '"dialog_id":"[^"]*"' | cut -d'"' -f4)
        print_success "–î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω, ID: $DIALOG_ID"
        echo "–û—Ç–≤–µ—Ç: $response"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞: $response"
        return 1
    fi
}

# –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
test_data_analysis() {
    print_info "–¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ LLM..."
    
    response=$(curl -s -X POST http://localhost:50056/v1/analyze \
        -H "Content-Type: application/json" \
        -d "{
            \"user_id\": \"$TEST_USER\",
            \"file_path\": \"/data/test.csv\",
            \"file_format\": \"csv\",
            \"sample_size\": 1000,
            \"analysis_type\": \"detailed\"
        }")
    
    if echo "$response" | grep -q "request_id"; then
        REQUEST_ID=$(echo "$response" | grep -o '"request_id":"[^"]*"' | cut -d'"' -f4)
        print_success "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω, ID: $REQUEST_ID"
        echo "–û—Ç–≤–µ—Ç: $response"
    else
        print_error "–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $response"
        return 1
    fi
}

# –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–∞
test_create_pipeline() {
    print_info "–¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–∞..."
    
    response=$(curl -s -X POST http://localhost:50057/v1/dags \
        -H "Content-Type: application/json" \
        -d "{
            \"user_id\": \"$TEST_USER\",
            \"dag_id\": \"data_analysis_$TEST_USER\",
            \"dag_yaml\": \"test yaml content\",
            \"schedule_interval\": \"manual\",
            \"start_immediately\": true,
            \"description\": \"–ü–∞–π–ø–ª–∞–π–Ω –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö\"
        }")
    
    if echo "$response" | grep -q "dag_id"; then
        DAG_ID=$(echo "$response" | grep -o '"dag_id":"[^"]*"' | cut -d'"' -f4)
        print_success "–ü–∞–π–ø–ª–∞–π–Ω —Å–æ–∑–¥–∞–Ω, ID: $DAG_ID"
        echo "–û—Ç–≤–µ—Ç: $response"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–π–ø–ª–∞–π–Ω–∞: $response"
        return 1
    fi
}

# –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞
test_pipeline_status() {
    print_info "–¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞..."
    
    response=$(curl -s -X GET "http://localhost:50057/v1/dags/data_analysis_$TEST_USER")
    
    if echo "$response" | grep -q "dag_id"; then
        print_success "–°—Ç–∞—Ç—É—Å –ø–∞–π–ø–ª–∞–π–Ω–∞ –ø–æ–ª—É—á–µ–Ω"
        echo "–û—Ç–≤–µ—Ç: $response"
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞: $response"
        return 1
    fi
}

# –¢–µ—Å—Ç 6: –ß–∞—Ç —Å LLM
test_llm_chat() {
    print_info "–¢–µ—Å—Ç 6: –ß–∞—Ç —Å LLM..."
    
    response=$(curl -s -X POST http://localhost:50056/v1/chat \
        -H "Content-Type: application/json" \
        -d "{
            \"user_id\": \"$TEST_USER\",
            \"message\": \"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –∏ –¥–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\",
            \"context\": \"–ê–Ω–∞–ª–∏–∑ CSV —Ñ–∞–π–ª–∞\"
        }")
    
    if echo "$response" | grep -q "request_id"; then
        print_success "–ß–∞—Ç —Å LLM —É—Å–ø–µ—à–µ–Ω"
        echo "–û—Ç–≤–µ—Ç: $response"
    else
        print_error "–û—à–∏–±–∫–∞ —á–∞—Ç–∞ —Å LLM: $response"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header
    
    local failed_tests=0
    
    test_file_upload || failed_tests=$((failed_tests + 1))
    echo ""
    
    test_create_dialog || failed_tests=$((failed_tests + 1))
    echo ""
    
    test_data_analysis || failed_tests=$((failed_tests + 1))
    echo ""
    
    test_create_pipeline || failed_tests=$((failed_tests + 1))
    echo ""
    
    test_pipeline_status || failed_tests=$((failed_tests + 1))
    echo ""
    
    test_llm_chat || failed_tests=$((failed_tests + 1))
    echo ""
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if [ $failed_tests -eq 0 ]; then
        echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
        echo ""
        echo "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
        echo "  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $TEST_USER"
        echo "  - –§–∞–π–ª ID: $FILE_ID"
        echo "  - –î–∏–∞–ª–æ–≥ ID: $DIALOG_ID"
        echo "  - –ó–∞–ø—Ä–æ—Å ID: $REQUEST_ID"
        echo "  - DAG ID: $DAG_ID"
    else
        echo -e "${RED}‚ùå $failed_tests —Ç–µ—Å—Ç–æ–≤ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã${NC}"
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"