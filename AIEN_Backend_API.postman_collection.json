{
	"info": {
		"_postman_id": "aien-backend-api",
		"name": "AIEN Backend API",
		"description": "Коллекция для тестирования AIEN Backend API - загрузка файлов, анализ данных, генерация DDL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Checks",
			"item": [
				{
					"name": "API Gateway Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": ["{{base_url}}"],
							"path": ["health"]
						}
					},
					"response": []
				},
				{
					"name": "Data Analysis Service Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{analysis_url}}/health",
							"host": ["{{analysis_url}}"],
							"path": ["health"]
						}
					},
					"response": []
				},
				{
					"name": "File Service Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{file_url}}/health",
							"host": ["{{file_url}}"],
							"path": ["health"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "File Upload & Analysis",
			"item": [
				{
					"name": "Upload CSV File",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{csv_file_path}}"
								},
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "text"
								},
								{
									"key": "file_type",
									"value": "csv",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{file_url}}/api/v1/files/upload",
							"host": ["{{file_url}}"],
							"path": ["api", "v1", "files", "upload"]
						}
					},
					"response": []
				},
				{
					"name": "Upload JSON File",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{json_file_path}}"
								},
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "text"
								},
								{
									"key": "file_type",
									"value": "json",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{file_url}}/api/v1/files/upload",
							"host": ["{{file_url}}"],
							"path": ["api", "v1", "files", "upload"]
						}
					},
					"response": []
				},
				{
					"name": "Upload XML File",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{xml_file_path}}"
								},
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "text"
								},
								{
									"key": "file_type",
									"value": "xml",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{file_url}}/api/v1/files/upload",
							"host": ["{{file_url}}"],
							"path": ["api", "v1", "files", "upload"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Data Analysis",
			"item": [
				{
					"name": "Start Analysis",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"file_id\": \"{{file_id}}\",\n    \"user_id\": \"{{user_id}}\",\n    \"file_path\": \"{{file_path}}\"\n}"
						},
						"url": {
							"raw": "{{analysis_url}}/api/v1/analysis/start",
							"host": ["{{analysis_url}}"],
							"path": ["api", "v1", "analysis", "start"]
						}
					},
					"response": []
				},
				{
					"name": "Get Analysis Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{analysis_url}}/api/v1/analysis/status/{{analysis_id}}",
							"host": ["{{analysis_url}}"],
							"path": ["api", "v1", "analysis", "status", "{{analysis_id}}"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Scenarios",
			"item": [
				{
					"name": "Scenario 1: Museum Tickets CSV",
					"item": [
						{
							"name": "1. Start Analysis - Museum Tickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"file_id\": \"museum-tickets-001\",\n    \"user_id\": \"user-123\",\n    \"file_path\": \"users/user-123/museum-tickets-001/museum_tickets.csv\"\n}"
								},
								"url": {
									"raw": "{{analysis_url}}/api/v1/analysis/start",
									"host": ["{{analysis_url}}"],
									"path": ["api", "v1", "analysis", "start"]
								}
							},
							"response": []
						},
						{
							"name": "2. Check Status - Museum Tickets",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{analysis_url}}/api/v1/analysis/status/{{museum_analysis_id}}",
									"host": ["{{analysis_url}}"],
									"path": ["api", "v1", "analysis", "status", "{{museum_analysis_id}}"]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Scenario 2: Sales Data CSV",
					"item": [
						{
							"name": "1. Start Analysis - Sales Data",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"file_id\": \"sales-data-002\",\n    \"user_id\": \"user-456\",\n    \"file_path\": \"users/user-456/sales-data-002/sales_data.csv\"\n}"
								},
								"url": {
									"raw": "{{analysis_url}}/api/v1/analysis/start",
									"host": ["{{analysis_url}}"],
									"path": ["api", "v1", "analysis", "start"]
								}
							},
							"response": []
						},
						{
							"name": "2. Check Status - Sales Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{analysis_url}}/api/v1/analysis/status/{{sales_analysis_id}}",
									"host": ["{{analysis_url}}"],
									"path": ["api", "v1", "analysis", "status", "{{sales_analysis_id}}"]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Scenario 3: User Data JSON",
					"item": [
						{
							"name": "1. Start Analysis - User Data",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"file_id\": \"user-data-003\",\n    \"user_id\": \"user-789\",\n    \"file_path\": \"users/user-789/user-data-003/users.json\"\n}"
								},
								"url": {
									"raw": "{{analysis_url}}/api/v1/analysis/start",
									"host": ["{{analysis_url}}"],
									"path": ["api", "v1", "analysis", "start"]
								}
							},
							"response": []
						},
						{
							"name": "2. Check Status - User Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{analysis_url}}/api/v1/analysis/status/{{user_analysis_id}}",
									"host": ["{{analysis_url}}"],
									"path": ["api", "v1", "analysis", "status", "{{user_analysis_id}}"]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Database Operations",
			"item": [
				{
					"name": "Get DDL Script",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{analysis_url}}/api/v1/analysis/ddl/{{analysis_id}}",
							"host": ["{{analysis_url}}"],
							"path": ["api", "v1", "analysis", "ddl", "{{analysis_id}}"]
						}
					},
					"response": []
				},
				{
					"name": "Download Analysis Result",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{analysis_url}}/api/v1/analysis/download/{{analysis_id}}",
							"host": ["{{analysis_url}}"],
							"path": ["api", "v1", "analysis", "download", "{{analysis_id}}"]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Генерируем уникальные ID для тестов",
					"if (!pm.variables.get('user_id')) {",
					"    pm.variables.set('user_id', 'user-' + Math.random().toString(36).substr(2, 9));",
					"}",
					"",
					"if (!pm.variables.get('file_id')) {",
					"    pm.variables.set('file_id', 'file-' + Math.random().toString(36).substr(2, 9));",
					"}",
					"",
					"// Генерируем timestamp для уникальности",
					"pm.variables.set('timestamp', Date.now());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Автоматически извлекаем analysis_id из ответа",
					"if (pm.response.json() && pm.response.json().analysis_id) {",
					"    pm.variables.set('analysis_id', pm.response.json().analysis_id);",
					"    ",
					"    // Сохраняем ID для разных сценариев",
					"    if (pm.info.requestName.includes('Museum')) {",
					"        pm.variables.set('museum_analysis_id', pm.response.json().analysis_id);",
					"    } else if (pm.info.requestName.includes('Sales')) {",
					"        pm.variables.set('sales_analysis_id', pm.response.json().analysis_id);",
					"    } else if (pm.info.requestName.includes('User')) {",
					"        pm.variables.set('user_analysis_id', pm.response.json().analysis_id);",
					"    }",
					"}",
					"",
					"// Проверяем статус ответа",
					"pm.test('Status code is 200', function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"// Проверяем структуру ответа для анализа",
					"if (pm.info.requestName.includes('Status')) {",
					"    pm.test('Response has analysis data', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('analysis_id');",
					"        pm.expect(jsonData).to.have.property('status');",
					"    });",
					"    ",
					"    pm.test('Analysis is completed', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData.status).to.be.oneOf(['completed', 'started']);",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "analysis_url",
			"value": "http://localhost:8083",
			"type": "string"
		},
		{
			"key": "file_url",
			"value": "http://localhost:8081",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "test-user-123",
			"type": "string"
		},
		{
			"key": "file_id",
			"value": "test-file-456",
			"type": "string"
		},
		{
			"key": "file_path",
			"value": "users/test-user-123/test-file-456/data.csv",
			"type": "string"
		},
		{
			"key": "analysis_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "csv_file_path",
			"value": "/path/to/your/csv/file.csv",
			"type": "string"
		},
		{
			"key": "json_file_path",
			"value": "/path/to/your/json/file.json",
			"type": "string"
		},
		{
			"key": "xml_file_path",
			"value": "/path/to/your/xml/file.xml",
			"type": "string"
		}
	]
}