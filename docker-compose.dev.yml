# Конфигурация для разработки
# Используется с: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

version: '3.8'

services:
  # Переопределение для разработки
  api-gateway:
    build:
      context: ./api-geteway
      dockerfile: Dockerfile
      target: builder  # Используем стадию builder для разработки
    volumes:
      - ./api-geteway:/app
      - /app/vendor  # Исключаем vendor из монтирования
    environment:
      - GIN_MODE=debug
      - LOG_LEVEL=debug
    command: ["go", "run", "cmd/main.go"]

  file-service:
    build:
      context: ./file-service
      dockerfile: Dockerfile
      target: builder
    volumes:
      - ./file-service:/app
      - /app/vendor
    environment:
      - GIN_MODE=debug
      - LOG_LEVEL=debug
    command: ["go", "run", "cmd/main.go"]

  chat-service:
    build:
      context: ./chat-service
      dockerfile: Dockerfile
      target: builder
    volumes:
      - ./chat-service:/app
      - /app/vendor
    environment:
      - LOG_LEVEL=debug
    command: ["go", "run", "cmd/main.go"]

  llm-service:
    build:
      context: ./llm-service
      dockerfile: Dockerfile
      target: builder
    volumes:
      - ./llm-service:/app
      - /app/vendor
    environment:
      - LOG_LEVEL=debug
    command: ["go", "run", "cmd/main.go"]

  orchestration-service:
    build:
      context: ./orchestration-service
      dockerfile: Dockerfile
      target: builder
    volumes:
      - ./orchestration-service:/app
      - /app/vendor
    environment:
      - LOG_LEVEL=debug
    command: ["go", "run", "cmd/main.go"]

  # Дополнительные сервисы для разработки
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - aien-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - aien-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - aien-network

  # Hot reload для Go сервисов
  air:
    image: cosmtrek/air:latest
    volumes:
      - ./:/app
    working_dir: /app
    command: ["air", "-c", ".air.toml"]
    networks:
      - aien-network

volumes:
  grafana_data: